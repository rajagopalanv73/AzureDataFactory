{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "blrtrainingadf"
		},
		"AdfSurrenSqlConnection_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AdfSurrenSqlConnection'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSqlDatabaseConndf_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabaseConndf'"
		},
		"CSVLinkedService_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'CSVLinkedService'"
		},
		"Surren_BlobStorage_1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Surren_BlobStorage_1'"
		},
		"stdflkdsvc001_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'stdflkdsvc001'"
		},
		"surrenlinkedservice1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'surrenlinkedservice1'"
		},
		"surrenssdb_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'surrenssdb'"
		},
		"AdfSurrenSqlConnection_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "surrenss.database.windows.net"
		},
		"AdfSurrenSqlConnection_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "surrendb1"
		},
		"AdfSurrenSqlConnection_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "surren"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://surrendl1.dfs.core.windows.net/"
		},
		"AzureKeyVaulttest_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kvsurrentechdev.vault.azure.net/"
		},
		"AzureSqlDatabaseConndf_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "surrenss.database.windows.net"
		},
		"AzureSqlDatabaseConndf_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "surrendb1"
		},
		"AzureSqlDatabaseConndf_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "surren"
		},
		"AzureSynapseArtifacts1_properties_typeProperties_endpoint": {
			"type": "string",
			"defaultValue": "https://stsynworkspace001.dev.azuresynapse.net"
		},
		"CSVLinkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://surrendl1.dfs.core.windows.net/"
		},
		"sqlConnKeyVaultCredentials_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "surrenss.database.windows.net"
		},
		"sqlConnKeyVaultCredentials_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "surrendb1"
		},
		"sqlConnKeyVaultCredentials_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "surren"
		},
		"stdflkdsvc001_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://surrendl1.dfs.core.windows.net/"
		},
		"surrenlinkedservice1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://surrendl1.dfs.core.windows.net/"
		},
		"surrenssdb_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "surrenss.database.windows.net"
		},
		"surrenssdb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "surrendb1"
		},
		"surrenssdb_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "surren"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyDataPipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceBlobDatasetsurren",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "OutputSqlDatasetSurren",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data_Movement_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2025-07-25T05:56:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceBlobDatasetsurren')]",
				"[concat(variables('factoryId'), '/datasets/OutputSqlDatasetSurren')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Select_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SelectDataFlowActivity",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DFReadCSVSource",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DFSelectSourceStream": {},
									"SelectedColumnsDfSink2Db": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data_Flow_Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DFReadCSVSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmpTrainingPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EmpTrgDataFlow001",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "EmployeeDataSource",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EmpDataSetSource": {},
									"EmpDataSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data_Flow_Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/EmployeeDataSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExecutingPipelines')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutingPipelineActivity",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "VariableUsagePipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"participantName": "xyz",
								"trainingDate": "2025-07-28"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data_Movement_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2025-07-26T04:56:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/VariableUsagePipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JoinPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "JoinDataFlowActivity",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "JoinDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"JoinTable1Source": {},
									"JoinSecondTableSource": {},
									"JoinDummyTableSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data_Flow_Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/JoinDataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Location",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyAFile",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "BinaryDataSource_File",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "BinaryDataDestination",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.DestinationStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DeleteAFile",
									"description": "Delete a file from the source store",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyAFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "BinaryDataSource_File",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceStore_Location": {
						"type": "String",
						"defaultValue": "mycontainer"
					},
					"SourceStore_Directory": {
						"type": "String",
						"defaultValue": "data"
					},
					"DestinationStore_Location": {
						"type": "String",
						"defaultValue": "dbfs-container"
					},
					"DestinationStore_Directory": {
						"type": "String",
						"defaultValue": "newfolder"
					}
				},
				"folder": {
					"name": "Data_Movement_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2025-07-26T03:38:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BinaryDataSource_Folder')]",
				"[concat(variables('factoryId'), '/datasets/BinaryDataSource_File')]",
				"[concat(variables('factoryId'), '/datasets/BinaryDataDestination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MyFirstDataFlowPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MyFirstDataFlowActivity",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MyFirstCSVDataSetSrc",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCSVSrc": {},
									"CSVDataFlowSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data_Flow_Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/MyFirstCSVDataSetSrc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ST_AddColumnsPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CSVCoumnAddition",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": "$$FILENAME"
									},
									{
										"name": "Author",
										"value": "Techy Infotek"
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DScsvAddColumn",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sqladdcolumn",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data_Movement_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2025-07-26T03:38:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DScsvAddColumn')]",
				"[concat(variables('factoryId'), '/datasets/sqladdcolumn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Surren_PipelineCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_xma",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "surrencontainer/surreninput/OrdersNew.csv"
							},
							{
								"name": "Destination",
								"value": "surrencontainer/surrenoutput/CopyOrder.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "surrenlinkedservice1",
										"type": "LinkedServiceReference"
									}
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_xma",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_xma",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data_Movement_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2025-07-25T05:56:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_xma')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_xma')]",
				"[concat(variables('factoryId'), '/linkedServices/surrenlinkedservice1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VariableUsagePipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "v_participant_name",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_participant_name",
							"value": {
								"value": "@pipeline().parameters.participantName",
								"type": "Expression"
							}
						}
					},
					{
						"name": "training_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "v_participant_name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_training_date",
							"value": {
								"value": "@pipeline().parameters.trainingDate",
								"type": "Expression"
							}
						}
					},
					{
						"name": "updateAttendance",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "training_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_InsertDailyAttendance]",
							"storedProcedureParameters": {
								"ParticipantName": {
									"value": {
										"value": "@toUpper(variables('v_participant_name'))",
										"type": "Expression"
									},
									"type": "String"
								},
								"TrainingDate": {
									"value": {
										"value": "@formatDateTime(variables('v_training_date'))",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "surrenssdb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"participantName": {
						"type": "string"
					},
					"trainingDate": {
						"type": "string"
					}
				},
				"variables": {
					"v_participant_name": {
						"type": "String"
					},
					"v_training_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Data_Movement_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2025-07-26T04:17:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/surrenssdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowmain')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df001Intro",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCsv": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data_Movement_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2025-07-25T05:56:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df001Intro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/loopuntil')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LoopUntil",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.looptocontinue, ['no'])",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "ExecutePipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "VariableUsagePipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"participantName": "done",
											"trainingDate": "done"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"looptocontinue": {
						"type": "string",
						"defaultValue": "yes"
					}
				},
				"folder": {
					"name": "Data_Movement_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2025-07-26T04:27:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/VariableUsagePipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplstselecttrf')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "selecttrfdataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "selectnewdf",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"selecttrfcsvread": {},
									"selectsinktrf": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data_Flow_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2025-07-25T08:07:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/selectnewdf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/surrenPipeLine_Copyfiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "surrencopydata",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dscsv1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "surrenoutput",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data_Movement_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2025-07-25T05:56:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dscsv1')]",
				"[concat(variables('factoryId'), '/datasets/surrenoutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/surrendf_pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "st_df_001",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "sfdfcsvsource",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"stsrccsv001": {},
									"stdfsqldbsink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data_Flow_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2025-07-25T05:56:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/sfdfcsvsource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/synapsepipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "SynapseNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": {
									"value": "14_Word_count_PySpark_Program_Practical",
									"type": "Expression"
								},
								"type": "NotebookReference"
							},
							"parameters": {
								"textdata": {
									"value": {
										"value": "Error message: hash_empty_error: Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. For more visit: aka.ms/msaljs/browser-errors",
										"type": "Expression"
									},
									"type": "string"
								}
							},
							"snapshot": true,
							"sparkPool": {
								"referenceName": {
									"value": "Spark1",
									"type": "Expression"
								},
								"type": "BigDataPoolReference"
							},
							"executorSize": "Small",
							"conf": {
								"spark.dynamicAllocation.enabled": false,
								"spark.dynamicAllocation.minExecutors": 3,
								"spark.dynamicAllocation.maxExecutors": 3
							},
							"driverSize": "Small",
							"numExecutors": 3
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseArtifacts1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseArtifacts1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testKeyvault')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "testkeyvault",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sqlConTestKeyVault",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data_Movement_Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/testkeyvault')]",
				"[concat(variables('factoryId'), '/datasets/sqlConTestKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the destination store.",
				"linkedServiceName": {
					"referenceName": "surrenlinkedservice1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String"
					},
					"Directory": {
						"type": "String"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@{dataset().Directory}",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/surrenlinkedservice1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataSource_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the file in the data source store.",
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String"
					},
					"Directory": {
						"type": "String"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@{dataset().Directory}",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataSource_Folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the folder in the data source store.",
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String"
					},
					"Directory": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CountrySortedSelectedDbSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseConndf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "CountrySortedSelected"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseConndf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SelectSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "surrenssdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "selectordercolumns"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/surrenssdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DScsvAddColumn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CSVLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "surreninput",
						"fileSystem": "surrencontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DATE",
						"type": "String"
					},
					{
						"name": "COUNTRY",
						"type": "String"
					},
					{
						"name": "PRODUCT",
						"type": "String"
					},
					{
						"name": "SALES",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CSVLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowSinkDataSetForSQLDb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseConndf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "OrdersNewSelectedColumns"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseConndf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_xma')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "CopyOrder.csv",
						"folderPath": "surrenoutput",
						"fileSystem": "surrencontainer"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DsSelectColumns2Db')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseConndf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "OrdersNewSelectedColumns"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseConndf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmpDataSinkActivity')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseConndf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "EmployeeTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseConndf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmpSrcDataSet001')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "employee_data.csv",
						"folderPath": "empdataset",
						"fileSystem": "surrencontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmpID",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "StartDate",
						"type": "String"
					},
					{
						"name": "ExitDate",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "Supervisor",
						"type": "String"
					},
					{
						"name": "ADEmail",
						"type": "String"
					},
					{
						"name": "BusinessUnit",
						"type": "String"
					},
					{
						"name": "EmployeeStatus",
						"type": "String"
					},
					{
						"name": "EmployeeType",
						"type": "String"
					},
					{
						"name": "PayZone",
						"type": "String"
					},
					{
						"name": "EmployeeClassificationType",
						"type": "String"
					},
					{
						"name": "TerminationType",
						"type": "String"
					},
					{
						"name": "TerminationDescription",
						"type": "String"
					},
					{
						"name": "DepartmentType",
						"type": "String"
					},
					{
						"name": "Division",
						"type": "String"
					},
					{
						"name": "DOB",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "JobFunctionDescription",
						"type": "String"
					},
					{
						"name": "GenderCode",
						"type": "String"
					},
					{
						"name": "LocationCode",
						"type": "String"
					},
					{
						"name": "RaceDesc",
						"type": "String"
					},
					{
						"name": "MaritalDesc",
						"type": "String"
					},
					{
						"name": "Performance Score",
						"type": "String"
					},
					{
						"name": "Current Employee Rating",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JoinDFDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseConndf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "emp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseConndf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JoinDFSecondDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseConndf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DATE",
						"type": "nvarchar"
					},
					{
						"name": "COUNTRY",
						"type": "nvarchar"
					},
					{
						"name": "PRODUCT",
						"type": "nvarchar"
					},
					{
						"name": "SALES",
						"type": "nvarchar"
					},
					{
						"name": "Filename",
						"type": "nvarchar"
					},
					{
						"name": "Author",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "sales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseConndf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JoinSQLdbSinkStream')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseConndf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "dummyjointable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseConndf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutputSqlDatasetSurren')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdfSurrenSqlConnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "emp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdfSurrenSqlConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReadCSVDataFlowDataSetOrdersNew')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "OrdersNew.csv",
						"folderPath": "surreninput",
						"fileSystem": "surrencontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "ProductKey",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "EnglishProductName",
						"type": "String"
					},
					{
						"name": "SalesAmount",
						"type": "String"
					},
					{
						"name": "TaxAmt",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceBlobDatasetsurren')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "emp.txt",
						"folderPath": "adf_input",
						"fileSystem": "surrencontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_xma')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "OrdersNew.csv",
						"folderPath": "surreninput",
						"fileSystem": "surrencontainer"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dfsqlsink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdfSurrenSqlConnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblOrdersNewdf"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdfSurrenSqlConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dscsv1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "surrenlinkedservice1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "OrdersNew.csv",
						"folderPath": "surreninput",
						"fileSystem": "surrencontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "ProductKey",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "EnglishProductName",
						"type": "String"
					},
					{
						"name": "SalesAmount",
						"type": "String"
					},
					{
						"name": "TaxAmt",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/surrenlinkedservice1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlConTestKeyVault')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlConnKeyVaultCredentials",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "keyvaulttable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sqlConnKeyVaultCredentials')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqladdcolumn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "surrenssdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "sales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/surrenssdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqldbconn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "surrenssdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DATE",
						"type": "nvarchar"
					},
					{
						"name": "COUNTRY",
						"type": "nvarchar"
					},
					{
						"name": "PRODUCT",
						"type": "nvarchar"
					},
					{
						"name": "SALES",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DailySalesInfo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/surrenssdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stcsvdssrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "stdflkdsvc001",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "DailySales.csv",
						"folderPath": "surreninput",
						"fileSystem": "surrencontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DATE",
						"type": "String"
					},
					{
						"name": "COUNTRY",
						"type": "String"
					},
					{
						"name": "PRODUCT",
						"type": "String"
					},
					{
						"name": "SALES",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/stdflkdsvc001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/surrenoutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "surrenlinkedservice1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "surrenoutput",
						"fileSystem": "surrencontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/surrenlinkedservice1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/targetdataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdfSurrenSqlConnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "tf_sales_info"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdfSurrenSqlConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testkeyvault')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "OrdersNew.csv",
						"folderPath": "surreninput",
						"fileSystem": "surrencontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "ProductKey",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "EnglishProductName",
						"type": "String"
					},
					{
						"name": "SalesAmount",
						"type": "String"
					},
					{
						"name": "TaxAmt",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdfSurrenSqlConnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AdfSurrenSqlConnection_properties_typeProperties_server')]",
					"database": "[parameters('AdfSurrenSqlConnection_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AdfSurrenSqlConnection_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AdfSurrenSqlConnection_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVaulttest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVaulttest_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseConndf')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabaseConndf_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabaseConndf_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabaseConndf_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabaseConndf_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseArtifacts1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSynapseArtifacts",
				"typeProperties": {
					"endpoint": "[parameters('AzureSynapseArtifacts1_properties_typeProperties_endpoint')]",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/8774ea03-f374-4890-bea0-d9a4a9430be4/resourceGroups/SynapseResourceGroup/providers/Microsoft.Synapse/workspaces/stsynworkspace001"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSVLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('CSVLinkedService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('CSVLinkedService_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Surren_BlobStorage_1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Surren_BlobStorage_1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlConnKeyVaultCredentials')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('sqlConnKeyVaultCredentials_properties_typeProperties_server')]",
					"database": "[parameters('sqlConnKeyVaultCredentials_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('sqlConnKeyVaultCredentials_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVaulttest",
							"type": "LinkedServiceReference"
						},
						"secretName": "sqlpassword"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVaulttest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stdflkdsvc001')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('stdflkdsvc001_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('stdflkdsvc001_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/surrenlinkedservice1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('surrenlinkedservice1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('surrenlinkedservice1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/surrenssdb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('surrenssdb_properties_typeProperties_server')]",
					"database": "[parameters('surrenssdb_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('surrenssdb_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('surrenssdb_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdfCopyDataPipeline1Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyDataPipeline1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2025-07-25T02:41:00",
						"endTime": "2025-07-25T03:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyDataPipeline1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHostedIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DFReadCSVSource')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ReadCSVDataFlowDataSetOrdersNew",
								"type": "DatasetReference"
							},
							"name": "DFSelectSourceStream"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CountrySortedSelectedDbSink",
								"type": "DatasetReference"
							},
							"name": "SelectedColumnsDfSink2Db"
						}
					],
					"transformations": [
						{
							"name": "SelectColumnsTrf"
						},
						{
							"name": "SortOnSelectColumns"
						},
						{
							"name": "FilterForIndia"
						}
					],
					"scriptLines": [
						"source(output(",
						"          OrderDate as date 'dd-MM-yyyy',",
						"          ProductKey as short,",
						"          Country as string,",
						"          EnglishProductName as string,",
						"          SalesAmount as double,",
						"          TaxAmt as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DFSelectSourceStream",
						"DFSelectSourceStream select(mapColumn(",
						"          {Order Date} = OrderDate,",
						"          Country,",
						"          {English Product Name} = EnglishProductName,",
						"          {Sales Amount} = SalesAmount",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectColumnsTrf",
						"SelectColumnsTrf sort(asc(Country, true),",
						"     caseInsensitive: true) ~> SortOnSelectColumns",
						"SortOnSelectColumns filter(Country=='Canada') ~> FilterForIndia",
						"FilterForIndia sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SelectedColumnsDfSink2Db"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ReadCSVDataFlowDataSetOrdersNew')]",
				"[concat(variables('factoryId'), '/datasets/CountrySortedSelectedDbSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmployeeDataSource')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EmpSrcDataSet001",
								"type": "DatasetReference"
							},
							"name": "EmpDataSetSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "EmpDataSinkActivity",
								"type": "DatasetReference"
							},
							"name": "EmpDataSink"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          EmpID as short,",
						"          FirstName as string,",
						"          LastName as string,",
						"          StartDate as date 'dd-MM-yyyy',",
						"          ExitDate as date 'dd-MM-yyyy',",
						"          Title as string,",
						"          Supervisor as string,",
						"          ADEmail as string,",
						"          BusinessUnit as string,",
						"          EmployeeStatus as string,",
						"          EmployeeType as string,",
						"          PayZone as string,",
						"          EmployeeClassificationType as string,",
						"          TerminationType as string,",
						"          TerminationDescription as string,",
						"          DepartmentType as string,",
						"          Division as string,",
						"          DOB as date 'dd-MM-yyyy',",
						"          State as string,",
						"          JobFunctionDescription as string,",
						"          GenderCode as string,",
						"          LocationCode as integer,",
						"          RaceDesc as string,",
						"          MaritalDesc as string,",
						"          {Performance Score} as string,",
						"          {Current Employee Rating} as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> EmpDataSetSource",
						"EmpDataSetSource sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> EmpDataSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/EmpSrcDataSet001')]",
				"[concat(variables('factoryId'), '/datasets/EmpDataSinkActivity')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JoinDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "JoinDFDataset",
								"type": "DatasetReference"
							},
							"name": "JoinTable1Source"
						},
						{
							"dataset": {
								"referenceName": "JoinDFSecondDataSet",
								"type": "DatasetReference"
							},
							"name": "JoinSecondTableSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "JoinSQLdbSinkStream",
								"type": "DatasetReference"
							},
							"name": "JoinDummyTableSink"
						}
					],
					"transformations": [
						{
							"name": "JoinExpression1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as integer,",
						"          FirstName as string,",
						"          LastName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> JoinTable1Source",
						"source(output(",
						"          DATE as string,",
						"          COUNTRY as string,",
						"          PRODUCT as string,",
						"          SALES as string,",
						"          Filename as string,",
						"          Author as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> JoinSecondTableSource",
						"JoinTable1Source, JoinSecondTableSource join(FirstName == PRODUCT,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinExpression1",
						"JoinExpression1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> JoinDummyTableSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/JoinDFDataset')]",
				"[concat(variables('factoryId'), '/datasets/JoinDFSecondDataSet')]",
				"[concat(variables('factoryId'), '/datasets/JoinSQLdbSinkStream')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MyFirstCSVDataSetSrc')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ReadCSVDataFlowDataSetOrdersNew",
								"type": "DatasetReference"
							},
							"name": "ReadCSVSrc"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataFlowSinkDataSetForSQLDb",
								"type": "DatasetReference"
							},
							"name": "CSVDataFlowSink"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          OrderDate as date 'dd-MM-yyyy',",
						"          ProductKey as short,",
						"          Country as string,",
						"          EnglishProductName as string,",
						"          SalesAmount as double,",
						"          TaxAmt as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ReadCSVSrc",
						"ReadCSVSrc sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> CSVDataFlowSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ReadCSVDataFlowDataSetOrdersNew')]",
				"[concat(variables('factoryId'), '/datasets/DataFlowSinkDataSetForSQLDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df001Intro')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dscsv1",
								"type": "DatasetReference"
							},
							"name": "ReadCsv"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_dfsqlsink",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          OrderDate as date 'dd-MM-yyyy',",
						"          ProductKey as integer,",
						"          Country as string,",
						"          EnglishProductName as string,",
						"          SalesAmount as double,",
						"          TaxAmt as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ReadCsv",
						"ReadCsv sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dscsv1')]",
				"[concat(variables('factoryId'), '/datasets/ds_dfsqlsink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/selectnewdf')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dscsv1",
								"type": "DatasetReference"
							},
							"name": "selecttrfcsvread"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SelectSink",
								"type": "DatasetReference"
							},
							"name": "selectsinktrf"
						}
					],
					"transformations": [
						{
							"name": "selectcolumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          OrderDate as date 'dd-MM-yyyy',",
						"          ProductKey as short,",
						"          Country as string,",
						"          EnglishProductName as string,",
						"          SalesAmount as double,",
						"          TaxAmt as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> selecttrfcsvread",
						"selecttrfcsvread select(mapColumn(",
						"          DateofOrder = OrderDate,",
						"          Country,",
						"          ProductName = EnglishProductName,",
						"          SalesAmount",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectcolumns",
						"selectcolumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> selectsinktrf"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dscsv1')]",
				"[concat(variables('factoryId'), '/datasets/DS_SelectSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sfdfcsvsource')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "stcsvdssrc",
								"type": "DatasetReference"
							},
							"name": "stsrccsv001"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "targetdataset",
								"type": "DatasetReference"
							},
							"name": "stdfsqldbsink"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          DATE as date 'MM/dd/yyyy',",
						"          COUNTRY as string,",
						"          PRODUCT as string,",
						"          SALES as double '000,000,000.000'",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> stsrccsv001",
						"stsrccsv001 sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> stdfsqldbsink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/stcsvdssrc')]",
				"[concat(variables('factoryId'), '/datasets/targetdataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RunNotebook')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "returnvaluenotebook",
						"type": "SynapseNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": {
									"value": "return_value_notebook",
									"type": "Expression"
								},
								"type": "NotebookReference"
							},
							"parameters": {
								"input_param": {
									"value": "Calling from ADF",
									"type": "string"
								}
							},
							"snapshot": true,
							"sparkPool": {
								"referenceName": {
									"value": "Spark1",
									"type": "Expression"
								},
								"type": "BigDataPoolReference"
							},
							"executorSize": "Small",
							"conf": {
								"spark.dynamicAllocation.enabled": false
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseArtifacts1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Return_Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "returnvaluenotebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "received_value",
									"value": {
										"type": "String",
										"content": "@activity(\"returnvaluenotebook\").output.result.syn_result"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"return_value": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseArtifacts1')]"
			]
		}
	]
}