{
	"name": "JoinDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "JoinDFDataset",
						"type": "DatasetReference"
					},
					"name": "JoinTable1Source"
				},
				{
					"dataset": {
						"referenceName": "JoinDFSecondDataSet",
						"type": "DatasetReference"
					},
					"name": "JoinSecondTableSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "JoinSQLdbSinkStream",
						"type": "DatasetReference"
					},
					"name": "JoinDummyTableSink"
				}
			],
			"transformations": [
				{
					"name": "JoinExpression1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as integer,",
				"          FirstName as string,",
				"          LastName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> JoinTable1Source",
				"source(output(",
				"          DATE as string,",
				"          COUNTRY as string,",
				"          PRODUCT as string,",
				"          SALES as string,",
				"          Filename as string,",
				"          Author as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> JoinSecondTableSource",
				"JoinTable1Source, JoinSecondTableSource join(FirstName == PRODUCT,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinExpression1",
				"JoinExpression1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> JoinDummyTableSink"
			]
		}
	}
}